{"version":3,"sources":["../src/countries.js"],"names":["Countries","countries","propName","indexOf","Error","values","allowedValues","map","v","forEach","value","extractData","_checkPropExists","_checkAllowedValues","_execFilter","filter","i","length","instance","data","Country"],"mappings":"kgCAIMA,CAAAA,S,yBACJ,WAAYC,CAAZ,CAAuB,yBACrB,KAAKA,SAAL,CAAiBA,CADI,CAErB,sBAAW,IAAX,CACD,C,+EAcgBC,C,CAAU,CACzB,GAAoC,CAAhC,sBAAYC,OAAZ,CAAoBD,CAApB,CAAJ,CACE,KAAM,IAAIE,CAAAA,KAAJ,8BAAiCF,CAAjC,uBAET,C,gEAEmBA,C,CAAUG,C,CAAQ,CACpC,GAAMC,CAAAA,CAAa,CAAG,KAAKL,SAAL,CAAeM,GAAf,CAAmB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACN,CAAD,CAAL,CAApB,CAAtB,CACAG,CAAM,CAACI,OAAP,CAAe,SAAAC,CAAK,CAAI,CACtB,GAAmC,CAA/B,CAAAJ,CAAa,CAACH,OAAd,CAAsBO,CAAtB,CAAJ,CACE,KAAM,IAAIN,CAAAA,KAAJ,iBAAmBM,CAAnB,qBAET,CAJD,CAKD,C,gDAEWR,C,CAAUG,C,CAAQM,C,CAAa,CAGzC,MAFA,MAAKC,gBAAL,CAAsBV,CAAtB,CAEA,CADA,KAAKW,mBAAL,CAAyBX,CAAzB,CAAmCG,CAAnC,CACA,CAAO,GAAIL,CAAAA,CAAJ,CAAcW,CAAW,EAAzB,CACR,C,wCAEOT,C,CAAUG,C,CAAQ,YACxB,MAAO,MAAKS,WAAL,CAAiBZ,CAAjB,CAA2BG,CAA3B,CAAmC,iBACxC,CAAA,CAAI,CAACJ,SAAL,CAAec,MAAf,CAAsB,SAAAC,CAAC,QAAmC,CAAC,CAAhC,EAAAX,CAAM,CAACF,OAAP,CAAea,CAAC,CAACd,CAAD,CAAhB,CAAJ,CAAvB,CADwC,CAAnC,CAGR,C,wCAEOA,C,CAAUG,C,CAAQ,YACxB,MAAO,MAAKS,WAAL,CAAiBZ,CAAjB,CAA2BG,CAA3B,CAAmC,iBACxC,CAAA,CAAI,CAACJ,SAAL,CAAec,MAAf,CAAsB,SAAAC,CAAC,QAAmC,CAAC,CAAhC,EAAAX,CAAM,CAACF,OAAP,CAAea,CAAC,CAACd,CAAD,CAAhB,CAAJ,CAAvB,CADwC,CAAnC,CAGR,C,+BA3CS,CACR,MAAO,MAAKD,SACb,C,iCAEW,CACV,MAAO,MAAKA,SAAL,CAAe,CAAf,CACR,C,gCAEU,CACT,MAAO,MAAKA,SAAL,CAAe,KAAKA,SAAL,CAAegB,MAAf,CAAwB,CAAvC,CACR,C,kBAoCa,UAAM,CACpB,GAAIC,CAAAA,CAAJ,CAIA,MAHKA,CAAAA,CAGL,GAFEA,CAAQ,CAAG,GAAIlB,CAAAA,SAAJ,CAAcmB,sBAAKZ,GAAL,CAAS,SAAAC,CAAC,QAAI,IAAIY,oBAAJ,CAAYZ,CAAZ,CAAJ,CAAV,CAAd,CAEb,EAAOU,CACR,CANc,E","sourcesContent":["import data from '../data/countries'\nimport { deepFreeze } from './utils'\nimport Country, { ActiveProps } from './country'\n\nclass Countries {\n  constructor(countries) {\n    this.countries = countries\n    deepFreeze(this)\n  }\n\n  get all() {\n    return this.countries\n  }\n\n  get first() {\n    return this.countries[0]\n  }\n\n  get last() {\n    return this.countries[this.countries.length - 1]\n  }\n\n  _checkPropExists(propName) {\n    if (ActiveProps.indexOf(propName) < 0) {\n      throw new Error(`Country\\'s property ${propName} is not supported.`)\n    }\n  }\n\n  _checkAllowedValues(propName, values) {\n    const allowedValues = this.countries.map(v => v[propName])\n    values.forEach(value => {\n      if (allowedValues.indexOf(value) < 0) {\n        throw new Error(`Value ${value} is not allowed.`)\n      }\n    })\n  }\n\n  _execFilter(propName, values, extractData) {\n    this._checkPropExists(propName)\n    this._checkAllowedValues(propName, values)\n    return new Countries(extractData())\n  }\n\n  include(propName, values) {\n    return this._execFilter(propName, values, () =>\n      this.countries.filter(i => values.indexOf(i[propName]) != -1)\n    )\n  }\n\n  exclude(propName, values) {\n    return this._execFilter(propName, values, () =>\n      this.countries.filter(i => values.indexOf(i[propName]) == -1)\n    )\n  }\n}\n\nexport default (() => {\n  let instance\n  if (!instance) {\n    instance = new Countries(data.map(v => new Country(v)))\n  }\n  return instance\n})()\n"],"file":"countries.js"}